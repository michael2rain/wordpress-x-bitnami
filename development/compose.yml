# Bitnami WordPress Container with Traefik Reverse Proxy 
# This is a docker-compose file to deploy a WordPress instance with MariaDB and Memcached using Bitnami containers and Traefik as reverse proxy.

# Bitnami WordPress: https://hub.docker.com/r/bitnami/wordpress-nginx
# Bitnami MariaDB: https://hub.docker.com/r/bitnami/mariadb

# DEVELOPMENT ENVIRONMENT

version: '3.8'

services:

  # -- MARIADB -- #
  mariadb:
    image: 'docker.io/bitnami/mariadb:10.6'
    container_name: $SUB_DOMAIN-$INSTANCE_NAME-db
    restart: always
    env_file:
      # "stack.env" only for Portainer | Change to ".env" for local deployment
      - stack.env
    volumes:
      - 'mariadb_data:/bitnami/mariadb'
    networks:
      - backend
    environment:
      - MARIADB_ROOT_USER=root_$SUB_DOMAIN_db
      - MARIADB_DATABASE=$SUB_DOMAIN_db
      - MARIADB_USER=$SUB_DOMAIN_demon

  # -- MEMCACHED -- #
  memcached:
    image: 'bitnami/memcached:latest'
    container_name: $SUB_DOMAIN-$INSTANCE_NAME-cache
    restart: always
    env_file:
      - stack.env
    networks:
      - backend

  # -- WORDPRESS -- #
  wordpress:
    image: 'bitnami/wordpress-nginx:6.4.2'
    container_name: $SUB_DOMAIN-$INSTANCE_NAME-wp
    restart: always
    env_file:
      # "stack.env" only for Portainer | Change to ".env" for local deployment
      - stack.env
    depends_on:
      - mariadb
      - memcached
    volumes:
      - 'wordpress_data:/bitnami/wordpress'
    networks:
      - proxy
      - backend
    environment:
      # -- DB CONFIG -- #
      - WORDPRESS_DATABASE_NAME=$SUB_DOMAIN_db
      - WORDPRESS_DATABASE_USER=$SUB_DOMAIN_demon
      - WORDPRESS_DATABASE_PASSWORD=$MARIADB_PASSWORD
      - WORDPRESS_TABLE_PREFIX=$SUB_DOMAINx_

      # -- PHP CONFIG -- #
      - PHP_MAX_EXECUTION_TIME=900
      - PHP_UPLOAD_MAX_FILESIZE=300M
      - PHP_POST_MAX_SIZE=300M
      
      # -- EXTRA ARGUMENTS -- #
      - WORDPRESS_AUTO_UPDATE_LEVEL=minor
      - WORDPRESS_ENABLE_HTTPS=yes
      - WORDPRESS_ENABLE_REVERSE_PROXY=yes

      # -- WORDPRESS EXTRA CONFIG -- #
      - WORDPRESS_EXTRA_WP_CONFIG_CONTENT=
        define( 'WP_CACHE', true );

    labels:
      - traefik.enable=true
      - traefik.http.routers.$SUB_DOMAIN-$INSTANCE_NAME-wp.entrypoints=https
      # Subdomain rule as a development environment
      - traefik.http.routers.$SUB_DOMAIN-$INSTANCE_NAME-wp.rule=Host(`${SUB_DOMAIN}.${DOMAIN_HOST}`)
      # SSL resolver
      - traefik.http.routers.$SUB_DOMAIN-$INSTANCE_NAME-wp.tls=true
      - traefik.http.routers.$SUB_DOMAIN-$INSTANCE_NAME-wp.tls.certresolver=letsencrypt
      # Middlewares: No index rules
      - traefik.http.middlewares.$SUB_DOMAIN-$INSTANCE_NAME.headers.customresponseheaders.X-Robots-Tag=noindex,nofollow,nosnippet,notranslate,noarchive,nosnippet

networks:
  proxy:
    external: true
  backend:
    external: false

volumes:
  mariadb_data:
    driver: local
  wordpress_data:
    driver: local